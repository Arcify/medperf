steps:
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    dir: "server"
    args: 
      [
      "build", 
      "-t", 
      "${_REGION}-${_ARTIFACT_REGISTRY_DOMAIN}/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}",
      "-f",
      "Dockerfile.cloudbuild", 
      "."
      ]

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: 
      [
        "push", 
        "${_REGION}-${_ARTIFACT_REGISTRY_DOMAIN}/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}"
      ]
  
  - id: "create sql database"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "sql",
        "databases",
        "create",
        "${_GCP_CI_DATABASE_NAME}",
        "--instance",
        "${_SQL_INSTANCE_NAME}"
      ]

  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    dir: "server"
    args:
      [
        "-i",
        "${_REGION}-${_ARTIFACT_REGISTRY_DOMAIN}/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_SQL_INSTANCE_NAME}",
        "-e",
        "SETTINGS_SECRETS_NAME=${_SECRET_SETTINGS_NAME}",
        "-e",
        "GCP_CI_CLOUDBUILD=${_GCP_CI_CLOUDBUILD}",
        "-e",
        "GCP_CI_DATABASE_URL=${_GCP_CI_DATABASE_URL}",
        "--",
        "python",
        "manage.py",
        "migrate",
      ]

  - id: "collect static"
    name: "gcr.io/google-appengine/exec-wrapper"
    dir: "server"
    args:
      [
        "-i",
        "${_REGION}-${_ARTIFACT_REGISTRY_DOMAIN}/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_SQL_INSTANCE_NAME}",
        "-e",
        "SETTINGS_SECRETS_NAME=${_SECRET_SETTINGS_NAME}",
        "-e",
        "GCP_CI_CLOUDBUILD=${_GCP_CI_CLOUDBUILD}",
        "-e",
        "GCP_CI_DATABASE_URL=${_GCP_CI_DATABASE_URL}",
        "--",
        "python",
        "manage.py",
        "collectstatic",
        "--verbosity",
        "2",
        "--no-input",
      ]

  - id: "cloud run deploy"
    name: "gcr.io/cloud-builders/gcloud"
    args: 
      [
        "run", 
        "deploy", 
        "${_SERVICE_NAME}", 
        "--platform", 
        "managed", 
        "--region", 
        "${_REGION}", 
        "--image", 
        "${_REGION}-${_ARTIFACT_REGISTRY_DOMAIN}/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}", 
        "--add-cloudsql-instances", 
        "${PROJECT_ID}:${_REGION}:${_SQL_INSTANCE_NAME}",
        "--set-env-vars",
        "SETTINGS_SECRETS_NAME=${_SECRET_SETTINGS_NAME}",
        "--set-env-vars",
        "GCP_CI_CLOUDBUILD=${_GCP_CI_CLOUDBUILD}",
        "--set-env-vars",
        "GCP_CI_DATABASE_URL=${_GCP_CI_DATABASE_URL}",
        "--allow-unauthenticated"
      ]

substitutions:
  _REGION: us-west1
  _ARTIFACT_REGISTRY_DOMAIN: docker.pkg.dev
  _REPO_NAME: medperf-repo
  _IMAGE_NAME: medperf-api
  _SERVICE_NAME: medperf-api-ci-PR-${_PR_NUMBER}
  _SECRET_SETTINGS_NAME: django-dev-settings
  _SQL_INSTANCE_NAME: medperf-dev
  ##settings specific for CI trigger##
  _GCP_CI_CLOUDBUILD: True
  _GCP_CI_DATABASE_NAME: db-ci-PR-${_PR_NUMBER}
  #_GCP_CI_DATABASE_URL var is set in Cloud build trigger configuration 

options:
    dynamic_substitutions: true
